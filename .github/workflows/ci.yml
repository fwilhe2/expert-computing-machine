name: CI
on:
  push:
  workflow_dispatch:

jobs:
  build-tools:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Checkout fwilhe2/melange
      uses: actions/checkout@v4.1.7
      with:
        repository: fwilhe2/melange
        ref: fwilhe-dev
        path: melange
    - name: Checkout fwilhe2/apko
      uses: actions/checkout@v4.1.7
      with:
        repository: fwilhe2/apko
        ref: fwilhe-dev
        path: apko
    - name: Setup Go environment
      uses: actions/setup-go@v5.0.1
    - name: Build melange
      working-directory: melange
      run: |
        sudo make install
    - name: Build apko
      working-directory: apko
      run: |
        make apko
        sudo make install
    - name: Upload melange-bin
      uses: actions/upload-artifact@v4.3.3
      with:
        name: melange-bin
        path: /usr/bin/melange
    - name: Upload apko-bin
      uses: actions/upload-artifact@v4.3.3
      with:
        name: apko-bin
        path: /usr/bin/apko

  build:
    runs-on: ubuntu-24.04
    continue-on-error: true
    needs:
      - build-tools
    strategy:
      fail-fast: false
      matrix:
        package:
          - bash
          - systemd
          - coreutils
          - glibc
          - ncurses
          - wolfi-base
          - wolfi-baselayout
          - ca-certificates
          - acl
          - attr
          - openssl
          - util-linux
          - libcap
          - libxcrypt
          - linux-kernel
          - dumb-init
          - finit
          - libite
          - libuev
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
    - run: chmod +x ./melange-bin/melange
    - run: sudo apt-get update && sudo apt-get -y install qemu-user-static build-essential git jq
    # https://github.com/chainguard-dev/actions/blob/9d943fc9889a0c0795e3c2bd4b949a9b610ac02e/setup-melange/action.yaml#L30
    # TODO: the bubblewrap package available from "apt install"
    # is outdated and missing newer features such as --clearenv flag,
    # so instead we download the wolfi .apk and use the binary in there
    - name: 'Install dependencies (bubblewrap)'
      shell: bash
      run: |
        sudo apt install -y libcap-dev meson ninja-build
        git clone https://github.com/containers/bubblewrap
        pushd bubblewrap
        meson --prefix=/usr -Drequire_userns=true . output
        cd output
        ninja
        sudo ninja install
        popd
        rm -rf bubblewrap
    - run: |
        ./melange-bin/melange build --arch x86_64 --keyring-append https://packages.wolfi.dev/os/wolfi-signing.rsa.pub --repository-append https://packages.wolfi.dev/os ${{ matrix.package }}.yaml
    - run: find ${{ github.workspace }}/packages
    - run: cd ${{ github.workspace }}/packages/x86_64; tar xzf APKINDEX.tar.gz; mv APKINDEX ${{ matrix.package }}-APKINDEX
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: package-${{ matrix.package }}
        path: ${{ github.workspace }}/packages

  rootfs:
    runs-on: ubuntu-24.04
    needs:
      - build
      - build-tools
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
    - name: Display structure of downloaded files
      run: ls -R
    - run: mkdir -p repo/x86_64
    - run: find . -name '*.apk' -exec cp {} repo/x86_64 \;
    - run: find . -name 'APKINDEX.tar.gz' -exec tar xf {} \;
    - run: python3 .github/workflows/merge-apk-index.py
    - run: touch repo/x86_64/DESCRIPTION
    - run: cat repo/x86_64/APKINDEX
    - run: cd repo/x86_64; tar czf APKINDEX.tar.gz APKINDEX DESCRIPTION
    - run: find repo
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: apk-repo
        path: repo
    - run: |
        cd repo
        find .
        python3 -m http.server &
    - run: |
        chmod +x ./apko-bin/apko
        ./apko-bin/apko --log-level debug build-minirootfs os.yaml rootfs.tgz
        mkdir rootfs
        sudo tar xzf rootfs.tgz -C rootfs
        sudo /sbin/mkfs.ext4 -L root -d ./rootfs/ rootfs.ext4 2G
    - run: sudo tar cf rootfs.tar rootfs
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: rootfs-tar
        path: rootfs.tar
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: rootfs-raw
        path: rootfs.ext4
