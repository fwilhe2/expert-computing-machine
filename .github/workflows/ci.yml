name: CI
on:
  push:
  workflow_dispatch:

jobs:
  build-tools:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Checkout fwilhe2/melange
      uses: actions/checkout@v4.1.7
      with:
        repository: fwilhe2/melange
        path: melange
    - name: Checkout fwilhe2/apko
      uses: actions/checkout@v4.1.7
      with:
        repository: fwilhe2/apko
        path: apko
    - name: Setup Go environment
      uses: actions/setup-go@v5.0.1
    - name: Build melange
      working-directory: melange
      run: |
        sudo make install
    - name: Build apko
      working-directory: apko
      run: |
        make apko
        sudo make install

  build:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        package:
          - bash
          - systemd
          - coreutils
          - linux-kernel
          - glibc
          - ncurses
          - wolfi-base
          - wolfi-baselayout
    steps:
    - uses: actions/checkout@v4
    - uses: chainguard-dev/actions/melange-build@main
      with:
        config: "${{ matrix.package }}.yaml"
        repository-append: "https://packages.wolfi.dev/os"
        keyring-append: "https://packages.wolfi.dev/os/wolfi-signing.rsa.pub"
        repository-path: ${{ github.workspace }}/packages/${{ matrix.package }}
    - run: find ${{ github.workspace }}/packages/${{ matrix.package }}
    - run: cd ${{ github.workspace }}/packages/${{ matrix.package }}/x86_64; tar xzf APKINDEX.tar.gz; mv APKINDEX ${{ matrix.package }}-APKINDEX
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: ${{ matrix.package }}
        path: ${{ github.workspace }}/packages/${{ matrix.package }}

  rootfs:
    runs-on: ubuntu-latest
    needs:
      - build
      - build-tools
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
    - name: Display structure of downloaded files
      run: ls -R
    - run: mkdir -p repo/x86_64
    - run: find . -name '*.apk' -exec cp {} repo/x86_64 \;
    - run: find . -name 'APKINDEX.tar.gz' -exec tar xf {} \;
    - run: python3 .github/workflows/merge-apk-index.py
    - run: touch repo/x86_64/DESCRIPTION
    - run: echo xxxxx
    - run: cat repo/x86_64/APKINDEX
    - run: cd repo/x86_64; tar czf APKINDEX.tar.gz APKINDEX DESCRIPTION
    - run: find repo
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: repo
        path: repo
    - run: |
        cd repo
        find .
        python3 -m http.server &
    # - run: |
    #     docker pull cgr.dev/chainguard/apko
    #     docker run --rm -v ${PWD}:/work -w /work cgr.dev/chainguard/apko --log-level debug build-minirootfs os.yaml rootfs.tgz
    #     mkdir rootfs
    #     sudo tar xzf rootfs.tgz -C rootfs
    #     sudo /sbin/mkfs.ext4 -L root -d ./rootfs/ rootfs.ext4 2G
    # - run: tar cf rootfs.tar rootfs
    # - name: Upload a Build Artifact
    #   uses: actions/upload-artifact@v4.3.3
    #   with:
    #     name: rootfs-tar
    #     path: rootfs.tar
    # - name: Upload a Build Artifact
    #   uses: actions/upload-artifact@v4.3.3
    #   with:
    #     name: rootfs-raw
    #     path: rootfs.ext4