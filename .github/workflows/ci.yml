name: CI
on:
  push:
  workflow_dispatch:

jobs:
  build-tools:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Checkout fwilhe2/melange
      uses: actions/checkout@v4.1.7
      with:
        repository: fwilhe2/melange
        ref: fwilhe-dev
        path: melange
    - name: Checkout fwilhe2/apko
      uses: actions/checkout@v4.1.7
      with:
        repository: fwilhe2/apko
        ref: fwilhe-dev
        path: apko
    - name: Setup Go environment
      uses: actions/setup-go@v5.0.1
    - name: Build melange
      working-directory: melange
      run: |
        sudo make install
    - name: Build apko
      working-directory: apko
      run: |
        make apko
        sudo make install
    - name: Upload melange-bin
      uses: actions/upload-artifact@v4.3.3
      with:
        name: melange-bin
        path: /usr/bin/melange
    - name: Upload apko-bin
      uses: actions/upload-artifact@v4.3.3
      with:
        name: apko-bin
        path: /usr/bin/apko

  build:
    runs-on: ubuntu-24.04
    continue-on-error: true
    needs:
      - build-tools
    strategy:
      fail-fast: false
      matrix:
        package:
          - acl
          - attr
          - bash
          - ca-certificates
          - coreutils
          - dash
          - glibc
          - kmod
          - libcap
          - libxcrypt
          - linux-pam
          - ncurses
          - openssl
          - systemd
          - tzdata
          - util-linux
          - wolfi-base
          - wolfi-baselayout
          - xz
          - zlib
          - zstd
          - dbus
          - kdb
          - expat
          - gzip
          # - linux-kernel
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
    - run: sudo mv ./melange-bin/melange /usr/local/bin/ && chmod +x /usr/local/bin/melange
    - run: sudo apt-get update && sudo apt-get -y install qemu-user-static

    # https://github.com/chainguard-dev/actions/blob/2faf313e789d339d91d3c4a73445ccdf90e5272d/setup-melange/action.yaml#L30
    - name: 'Install dependencies'
      shell: bash
      run: |
        sudo apt install -y build-essential git jq
    # TODO: the bubblewrap package available from "apt install"
    # is outdated and missing newer features such as --clearenv flag,
    # so instead we download the wolfi .apk and use the binary in there
    - name: 'Install dependencies (bubblewrap)'
      shell: bash
      run: |
        sudo apt install -y libcap-dev meson ninja-build
        git clone https://github.com/containers/bubblewrap
        pushd bubblewrap
        meson --prefix=/usr -Drequire_userns=true . output
        cd output
        ninja
        sudo ninja install
        popd
        rm -rf bubblewrap

    - run: |
        sudo ./build-package.sh ${{ matrix.package }}
    - run: sudo chown -R runner:runner ${{ github.workspace }}/packages
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: package-${{ matrix.package }}
        path: ${{ github.workspace }}/packages

  rootfs:
    runs-on: ubuntu-24.04
    needs:
      - build
      - build-tools
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
    - run: sudo mv ./apko-bin/apko /usr/local/bin/ && chmod +x /usr/local/bin/apko
    - name: Display structure of downloaded files
      run: ls -R
    - run: ./make-apk-repo.sh
    - name: Upload apk repo
      uses: actions/upload-artifact@v4.3.3
      with:
        name: apk-repo
        path: repo
    - run: ./serve-repo.sh
    - run: ./make-rootfs.sh
    - name: Upload sbom
      uses: actions/upload-artifact@v4.3.3
      with:
        name: sbom
        path: rootfs/var/lib/db/sbom/
    - run: python .github/workflows/md-sbom.py >> $GITHUB_STEP_SUMMARY
    - run: sudo find rootfs
    - run: sudo ls -lR rootfs
    - run: sudo du -h rootfs -d 5
    - run: sudo tar cf rootfs.tar rootfs
    - name: Upload rootfs disk image
      uses: actions/upload-artifact@v4.3.3
      with:
        name: rootfs-raw
        path: rootfs.ext4
