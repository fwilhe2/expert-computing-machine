name: Qemu
on:
  push:
  workflow_dispatch:

jobs:
  build-tools:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Checkout fwilhe2/melange
      uses: actions/checkout@v4.1.7
      with:
        repository: fwilhe2/melange
        ref: main
        path: melange
    - name: Checkout fwilhe2/apko
      uses: actions/checkout@v4.1.7
      with:
        repository: fwilhe2/apko
        ref: fwilhe-dev
        path: apko
    - name: Setup Go environment
      uses: actions/setup-go@v5.0.1
    - name: Build melange
      working-directory: melange
      run: |
        git log | head
        sudo make install
    - name: Build apko
      working-directory: apko
      run: |
        make apko
        sudo make install
    - name: Upload melange-bin
      uses: actions/upload-artifact@v4.3.3
      with:
        name: melange-bin
        path: /usr/bin/melange
    - name: Upload apko-bin
      uses: actions/upload-artifact@v4.3.3
      with:
        name: apko-bin
        path: /usr/bin/apko

  build:
    runs-on: ubuntu-24.04
    continue-on-error: true
    needs:
      - build-tools
    strategy:
      fail-fast: false
      matrix:
        package:
          - util-linux
          # - linux-kernel
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
    - run: sudo mv ./melange-bin/melange /usr/local/bin/ && chmod +x /usr/local/bin/melange
    - run: sudo apt-get update && sudo apt-get -y install qemu-user-static

    # https://github.com/89luca89/melange/blob/0f4d125be904ed658eda622bfbe2000763945815/.github/workflows/wolfi-presubmit.yaml#L103
    - name: Install QEMU/KVM
      run: |
        sudo apt-get -y install qemu-system qemu-kvm
    - name: Enable KVM group perms
      run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

    - run: |
        KERNEL_PKG="$(curl -sL https://dl-cdn.alpinelinux.org/alpine/edge/main/x86_64/APKINDEX.tar.gz | tar -Oxz APKINDEX | awk -F':' '$1 == "P" {printf "%s-", $2} $1 == "V" {printf "%s.apk\n", $2}' | grep "linux-virt" | grep -v dev)"
        curl -LSo linux-virt.apk "https://dl-cdn.alpinelinux.org/alpine/edge/main/x86_64/$KERNEL_PKG"
        mkdir -p /tmp/kernel
        tar -xf ./linux-virt.apk -C /tmp/kernel/

    - run: |
        export QEMU_KERNEL_IMAGE=/tmp/kernel/boot/vmlinuz-virt QEMU_KERNEL_MODULES=/tmp/kernel/lib/modules/
        export QEMU_KERNEL_MODULES=/tmp/kernel/lib/modules/
        ./build-package-qemu.sh ${{ matrix.package }}
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: package-${{ matrix.package }}
        path: ${{ github.workspace }}/packages
